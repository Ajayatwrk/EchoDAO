/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { CoreFundDemo, CoreFundDemoInterface } from "../CoreFundDemo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProjectCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "fundProject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "getProject",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalFunding",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "address payable",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalFunding",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50610a498061001d5f395ff3fe608060405260043610610049575f3560e01c8063107046bd1461004d57806336fbad26146100855780636bd06204146100a75780636c563abe146100c8578063f0f3f2c8146100db575b5f80fd5b348015610058575f80fd5b5061006c6100673660046106d0565b6100fa565b60405161007c949392919061072a565b60405180910390f35b348015610090575f80fd5b506100995f5481565b60405190815260200161007c565b3480156100b2575f80fd5b506100c66100c13660046107b6565b610239565b005b6100c66100d63660046106d0565b61038d565b3480156100e6575f80fd5b5061006c6100f53660046106d0565b610526565b600160208190525f9182526040909120805491810180546001600160a01b03909316926101269061081d565b80601f01602080910402602001604051908101604052809291908181526020018280546101529061081d565b801561019d5780601f106101745761010080835404028352916020019161019d565b820191905f5260205f20905b81548152906001019060200180831161018057829003601f168201915b5050505050908060020180546101b29061081d565b80601f01602080910402602001604051908101604052809291908181526020018280546101de9061081d565b80156102295780601f1061020057610100808354040283529160200191610229565b820191905f5260205f20905b81548152906001019060200180831161020c57829003601f168201915b5050505050908060030154905084565b5f8054908061024783610869565b91905055506040518060800160405280336001600160a01b0316815260200185858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250604080516020601f8601819004810282018101909252848152918101919085908590819084018382808284375f92018290525093855250505060209182018190528054815260018083526040909120835181546001600160a01b0319166001600160a01b03909116178155918301519082019061031b90826108e1565b506040820151600282019061033090826108e1565b5060608201518160030155905050336001600160a01b03165f547fa7f8f582d090b5312bbe3d5f616508e184319e9e0f3824445f07745728304c5f8686868660405161037f94939291906109c9565b60405180910390a350505050565b5f8111801561039d57505f548111155b6103e35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b60448201526064015b60405180910390fd5b5f34116104325760405162461bcd60e51b815260206004820152601a60248201527f46756e64696e6720616d6f756e74206d757374206265203e203000000000000060448201526064016103da565b5f818152600160205260408120600381018054919234926104549084906109fa565b909155505080546040515f916001600160a01b03169034908381818185875af1925050503d805f81146104a2576040519150601f19603f3d011682016040523d82523d5f602084013e6104a7565b606091505b50509050806104ea5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016103da565b604051348152339084907f38c48552690c96ec2872092ac1db6c19fb59f5a8c5b49bbf41ed4886d0ca69269060200160405180910390a3505050565b5f6060805f808511801561053b57505f548511155b61057c5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bda9958dd08125160721b60448201526064016103da565b5f85815260016020819052604090912080546003820154928201805492936001600160a01b03909216929091600285019183906105b89061081d565b80601f01602080910402602001604051908101604052809291908181526020018280546105e49061081d565b801561062f5780601f106106065761010080835404028352916020019161062f565b820191905f5260205f20905b81548152906001019060200180831161061257829003601f168201915b505050505092508180546106429061081d565b80601f016020809104026020016040519081016040528092919081815260200182805461066e9061081d565b80156106b95780601f10610690576101008083540402835291602001916106b9565b820191905f5260205f20905b81548152906001019060200180831161069c57829003601f168201915b505050505091509450945094509450509193509193565b5f602082840312156106e0575f80fd5b5035919050565b5f81518084525f5b8181101561070b576020818501810151868301820152016106ef565b505f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526080602082018190525f9061074d908301866106e7565b828103604084015261075f81866106e7565b91505082606083015295945050505050565b5f8083601f840112610781575f80fd5b50813567ffffffffffffffff811115610798575f80fd5b6020830191508360208285010111156107af575f80fd5b9250929050565b5f805f80604085870312156107c9575f80fd5b843567ffffffffffffffff808211156107e0575f80fd5b6107ec88838901610771565b90965094506020870135915080821115610804575f80fd5b5061081187828801610771565b95989497509550505050565b600181811c9082168061083157607f821691505b60208210810361084f57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161087a5761087a610855565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b601f8211156108dc57805f5260205f20601f840160051c810160208510156108ba5750805b601f840160051c820191505b818110156108d9575f81556001016108c6565b50505b505050565b815167ffffffffffffffff8111156108fb576108fb610881565b61090f81610909845461081d565b84610895565b602080601f831160018114610942575f841561092b5750858301515b5f19600386901b1c1916600185901b178555610999565b5f85815260208120601f198616915b8281101561097057888601518255948401946001909101908401610951565b508582101561098d57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f6109dc6040830186886109a1565b82810360208401526109ef8185876109a1565b979650505050505050565b80820180821115610a0d57610a0d610855565b9291505056fea2646970667358221220b47df6b5191c3b54fb909584a71bf127b1a1ff30a90238b5fe0ff1f1c501bbcc64736f6c63430008180033";

type CoreFundDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoreFundDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoreFundDemo__factory extends ContractFactory {
  constructor(...args: CoreFundDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CoreFundDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CoreFundDemo__factory {
    return super.connect(runner) as CoreFundDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreFundDemoInterface {
    return new Interface(_abi) as CoreFundDemoInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CoreFundDemo {
    return new Contract(address, _abi, runner) as unknown as CoreFundDemo;
  }
}
